[{"/Users/joannechen/Projects/Dev-Connector/client/src/reportWebVitals.js":"1","/Users/joannechen/Projects/Dev-Connector/client/src/App.js":"2","/Users/joannechen/Projects/Dev-Connector/client/src/index.js":"3","/Users/joannechen/Projects/Dev-Connector/client/src/components/layout/Landing.js":"4","/Users/joannechen/Projects/Dev-Connector/client/src/components/layout/Navbar.js":"5","/Users/joannechen/Projects/Dev-Connector/client/src/components/auth/Register.js":"6","/Users/joannechen/Projects/Dev-Connector/client/src/components/auth/Login.js":"7","/Users/joannechen/Projects/Dev-Connector/client/src/store.js":"8","/Users/joannechen/Projects/Dev-Connector/client/src/reducers/index.js":"9","/Users/joannechen/Projects/Dev-Connector/client/src/actions/alert.js":"10","/Users/joannechen/Projects/Dev-Connector/client/src/components/layout/Alert.js":"11","/Users/joannechen/Projects/Dev-Connector/client/src/actions/auth.js":"12","/Users/joannechen/Projects/Dev-Connector/client/src/reducers/alert.js":"13","/Users/joannechen/Projects/Dev-Connector/client/src/reducers/auth.js":"14","/Users/joannechen/Projects/Dev-Connector/client/src/actions/types.js":"15","/Users/joannechen/Projects/Dev-Connector/client/src/utils/setAuthToken.js":"16","/Users/joannechen/Projects/Dev-Connector/client/src/components/dashboard/Dashboard.js":"17","/Users/joannechen/Projects/Dev-Connector/client/src/components/routing/PrivateRoute.js":"18","/Users/joannechen/Projects/Dev-Connector/client/src/reducers/profile.js":"19","/Users/joannechen/Projects/Dev-Connector/client/src/components/layout/Spinner.js":"20","/Users/joannechen/Projects/Dev-Connector/client/src/components/profile-forms/CreateProfile.js":"21","/Users/joannechen/Projects/Dev-Connector/client/src/actions/profile.js":"22","/Users/joannechen/Projects/Dev-Connector/client/src/components/dashboard/DashboardActions.js":"23","/Users/joannechen/Projects/Dev-Connector/client/src/components/profile-forms/EditProfile.js":"24","/Users/joannechen/Projects/Dev-Connector/client/src/components/profile-forms/AddExperience.js":"25","/Users/joannechen/Projects/Dev-Connector/client/src/components/profile-forms/AddEducation.js":"26","/Users/joannechen/Projects/Dev-Connector/client/src/components/dashboard/Experience.js":"27","/Users/joannechen/Projects/Dev-Connector/client/src/components/dashboard/Education.js":"28","/Users/joannechen/Projects/Dev-Connector/client/src/components/profiles/Profiles.js":"29","/Users/joannechen/Projects/Dev-Connector/client/src/components/profiles/ProfileItem.js":"30","/Users/joannechen/Projects/Dev-Connector/client/src/components/profile/Profile.js":"31","/Users/joannechen/Projects/Dev-Connector/client/src/components/profile/ProfileTop.js":"32","/Users/joannechen/Projects/Dev-Connector/client/src/components/profile/ProfileAbout.js":"33","/Users/joannechen/Projects/Dev-Connector/client/src/components/profile/ProfileExperience.js":"34","/Users/joannechen/Projects/Dev-Connector/client/src/components/profile/ProfileEducation.js":"35"},{"size":362,"mtime":1606745319058,"results":"36","hashOfConfig":"37"},{"size":2684,"mtime":1607358091656,"results":"38","hashOfConfig":"37"},{"size":484,"mtime":1607356240494,"results":"39","hashOfConfig":"37"},{"size":1406,"mtime":1607097308058,"results":"40","hashOfConfig":"37"},{"size":1967,"mtime":1607344779532,"results":"41","hashOfConfig":"37"},{"size":6272,"mtime":1607008288621,"results":"42","hashOfConfig":"37"},{"size":2976,"mtime":1607008286187,"results":"43","hashOfConfig":"37"},{"size":501,"mtime":1606907460593,"results":"44","hashOfConfig":"37"},{"size":261,"mtime":1607081370541,"results":"45","hashOfConfig":"37"},{"size":517,"mtime":1606924349719,"results":"46","hashOfConfig":"37"},{"size":865,"mtime":1606924152871,"results":"47","hashOfConfig":"37"},{"size":3581,"mtime":1607101238366,"results":"48","hashOfConfig":"37"},{"size":1083,"mtime":1606992978743,"results":"49","hashOfConfig":"37"},{"size":1955,"mtime":1607271972981,"results":"50","hashOfConfig":"37"},{"size":716,"mtime":1607339361128,"results":"51","hashOfConfig":"37"},{"size":486,"mtime":1606996481588,"results":"52","hashOfConfig":"37"},{"size":2365,"mtime":1607355171807,"results":"53","hashOfConfig":"37"},{"size":1151,"mtime":1607079732933,"results":"54","hashOfConfig":"37"},{"size":1474,"mtime":1607341791308,"results":"55","hashOfConfig":"37"},{"size":322,"mtime":1607099637050,"results":"56","hashOfConfig":"37"},{"size":8680,"mtime":1607203505508,"results":"57","hashOfConfig":"37"},{"size":8912,"mtime":1607339332744,"results":"58","hashOfConfig":"37"},{"size":720,"mtime":1607356397171,"results":"59","hashOfConfig":"37"},{"size":10341,"mtime":1607355256433,"results":"60","hashOfConfig":"37"},{"size":4753,"mtime":1607355883306,"results":"61","hashOfConfig":"37"},{"size":4792,"mtime":1607355943125,"results":"62","hashOfConfig":"37"},{"size":1773,"mtime":1607272494994,"results":"63","hashOfConfig":"37"},{"size":1610,"mtime":1607272899196,"results":"64","hashOfConfig":"37"},{"size":1466,"mtime":1607355143611,"results":"65","hashOfConfig":"37"},{"size":1099,"mtime":1607344597651,"results":"66","hashOfConfig":"37"},{"size":3424,"mtime":1607426835824,"results":"67","hashOfConfig":"37"},{"size":2121,"mtime":1607374570611,"results":"68","hashOfConfig":"37"},{"size":899,"mtime":1607424578328,"results":"69","hashOfConfig":"37"},{"size":813,"mtime":1607426069660,"results":"70","hashOfConfig":"37"},{"size":901,"mtime":1607426854808,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h9m49y",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"89"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joannechen/Projects/Dev-Connector/client/src/reportWebVitals.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/App.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/index.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/layout/Landing.js",[],["148","149"],"/Users/joannechen/Projects/Dev-Connector/client/src/components/layout/Navbar.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/auth/Register.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/auth/Login.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/store.js",[],["150","151"],"/Users/joannechen/Projects/Dev-Connector/client/src/reducers/index.js",[],["152","153"],"/Users/joannechen/Projects/Dev-Connector/client/src/actions/alert.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/layout/Alert.js",[],["154","155"],"/Users/joannechen/Projects/Dev-Connector/client/src/actions/auth.js",[],["156","157"],"/Users/joannechen/Projects/Dev-Connector/client/src/reducers/alert.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/reducers/auth.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/actions/types.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/utils/setAuthToken.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/dashboard/Dashboard.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/routing/PrivateRoute.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/reducers/profile.js",["158"],"/Users/joannechen/Projects/Dev-Connector/client/src/components/layout/Spinner.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/profile-forms/CreateProfile.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/actions/profile.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/dashboard/DashboardActions.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/profile-forms/EditProfile.js",["159"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom'; //withRouter is for the redirect of the history\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile'; // need both get and post actions\n\n\nconst EditProfile = ({ \n    profile: { profile, loading }, \n    createProfile, \n    getCurrentProfile, \n    history                //history ('/dashboard) from the createProfile action\n}) => {  \n    const [formData, setFormdData] = useState({\n        company: '',\n        website: '',\n        location: '',\n        status: '',\n        skills: '',\n        githubusername: '',\n        bio: '',\n        twitter: '',\n        facebook: '',\n        linkedin: '',\n        youtube: '',\n        instagram: ''\n    });\n\n    //to onClick to change the state to true, then user can see the input fields for social media\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);  \n\n    useEffect(() => {   //mounting the profile info that are already there\n        getCurrentProfile();   \n\n        // now we set the form in current 'value' b/c not all fields are previously filled\n        setFormdData({\n            company: loading || !profile.company ? '' : profile.company,\n            website: loading || !profile.website ? '' : profile.website,\n            location: loading || !profile.location ? '' : profile.location,\n            status: loading || !profile.status ? '' : profile.status,\n            skills: loading || !profile.skills ? '' : profile.skills.join(','),\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\n            bio: loading || !profile.bio ? '' : profile.bio,\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\n            instagram: loading || !profile.social ? '' : profile.social.instagram,\n\n        });\n    }, [loading, getCurrentProfile]); //loading is the condition. only mount this once when it's loading\n\n    const {\n        company,\n        website,\n        location,\n        status,\n        skills,\n        githubusername,\n        bio,\n        twitter,\n        facebook,\n        linkedin,\n        youtube,\n        instagram\n    } = formData\n\n    const onChange = e => setFormdData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        createProfile(formData, history, true); //changing the edit to false so it wont redirect to dashboard\n    }\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Edit Your Profile</h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\"></i> Let's get some information to make your\n                profile stand out\n            </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <select name=\"status\" value={status} onChange={e => onChange(e)}>\n                        <option value=\"0\">* Select Professional Status</option>\n                        <option value=\"Developer\">Developer</option>\n                        <option value=\"Junior Developer\">Junior Developer</option>\n                        <option value=\"Senior Developer\">Senior Developer</option>\n                        <option value=\"Manager\">Manager</option>\n                        <option value=\"Student or Learning\">Student or Learning</option>\n                        <option value=\"Instructor\">Instructor or Teacher</option>\n                        <option value=\"Intern\">Intern</option>\n                        <option value=\"Other\">Other</option>\n                    </select>\n                    <small className=\"form-text\">Give us an idea of where you are at in your career</small>\n                </div>\n                <div className=\"form-group\">\n                    <input \n                        type=\"text\" \n                        placeholder=\"Company\" \n                        name=\"company\"\n                        value={company}\n                        onChange={e => onChange(e)}\n                    />\n                    <small className=\"form-text\">Could be your own company or one you work for</small>\n                </div>\n                <div className=\"form-group\">\n                    <input \n                        type=\"text\" \n                        placeholder=\"Website\" \n                        name=\"website\"\n                        value={website}\n                        onChange={e => onChange(e)}\n                    />\n                    <small className=\"form-text\">Could be your own or a company website</small>\n                </div>\n                <div className=\"form-group\">\n                    <input \n                        type=\"text\" \n                        placeholder=\"Location\" \n                        name=\"location\" \n                        value={location}\n                        onChange={e => onChange(e)}\n                    />\n                    <small className=\"form-text\">City & state suggested (eg. Boston, MA)</small>\n                </div>\n                <div className=\"form-group\">\n                    <input  \n                        type=\"text\" \n                        placeholder=\"* Skills\" \n                        name=\"skills\" \n                        value={skills}\n                        onChange={e => onChange(e)}\n                    />\n                     <small className=\"form-text\">\n                         Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n                    </small>\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Github Username\"\n                        name=\"githubusername\"\n                        value={githubusername}\n                        onChange={e => onChange(e)}\n                    />\n                    <small className=\"form-text\">\n                        If you want your latest repos and a Github link, include yourusername\n                    </small>\n                </div>\n                <div className=\"form-group\">\n                    <textarea \n                        placeholder=\"A short bio of yourself\" \n                        name=\"bio\"\n                        value={bio}\n                        onChange={e => onChange(e)}\n                    >\n                    </textarea>\n                    <small className=\"form-text\">Tell us a little about yourself</small>\n                </div>\n                <div className=\"my-2\">\n                <button onClick={() => toggleSocialInputs(!displaySocialInputs)} \n                    type=\"button\" \n                    className=\"btn btn-light\"\n                >\n                    Add Social Network Links\n                </button>\n                <span>Optional</span>\n                </div>\n\n                {displaySocialInputs && <Fragment>\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-twitter fa-2x\"></i>\n                        <input \n                            type=\"text\" \n                            placeholder=\"Twitter URL\" \n                            name=\"twitter\" \n                            value={twitter}\n                            onChange={e => onChange(e)}\n                        />\n                    </div>\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-facebook fa-2x\"></i>\n                        <input \n                            type=\"text\" \n                            placeholder=\"Facebook URL\" \n                            name=\"facebook\" \n                            value={facebook}\n                            onChange={e => onChange(e)}\n                        />\n                    </div>\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-youtube fa-2x\"></i>\n                        <input \n                            type=\"text\" \n                            placeholder=\"YouTube URL\" \n                            name=\"youtube\" \n                            value={youtube}\n                            onChange={e => onChange(e)}\n                        />\n                    </div>\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-linkedin fa-2x\"></i>\n                        <input \n                            type=\"text\" \n                            placeholder=\"Linkedin URL\" \n                            name=\"linkedin\" \n                            value={linkedin}\n                            onChange={e => onChange(e)}\n                        />\n                    </div>\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-instagram fa-2x\"></i>\n                        <input \n                            type=\"text\" \n                            placeholder=\"Instagram URL\" \n                            name=\"instagram\" \n                            value={instagram}\n                            onChange={e => onChange(e)}\n                        />\n                    </div>                   \n                </Fragment>}               \n                <input \n                    type=\"submit\" \n                    className=\"btn btn-primary my-1\" \n                />\n                <Link className=\"btn btn-light my-1\" to='/dashboard'>Go Back</Link>\n            </form>\n        </Fragment>\n    );\n};\n\nEditProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    getCurrentProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(withRouter(EditProfile));  //using withRouter for history obj which as '/dashboard' from the action","/Users/joannechen/Projects/Dev-Connector/client/src/components/profile-forms/AddExperience.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/profile-forms/AddEducation.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/dashboard/Experience.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/dashboard/Education.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/profiles/Profiles.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/profiles/ProfileItem.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/profile/Profile.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/profile/ProfileTop.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/profile/ProfileAbout.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/profile/ProfileExperience.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/profile/ProfileEducation.js",[],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"160","replacedBy":"164"},{"ruleId":"162","replacedBy":"165"},{"ruleId":"160","replacedBy":"166"},{"ruleId":"162","replacedBy":"167"},{"ruleId":"160","replacedBy":"168"},{"ruleId":"162","replacedBy":"169"},{"ruleId":"160","replacedBy":"170"},{"ruleId":"162","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":19,"column":1,"nodeType":"174","endLine":58,"endColumn":2},{"ruleId":"175","severity":1,"message":"176","line":51,"column":8,"nodeType":"177","endLine":51,"endColumn":36,"suggestions":"178"},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],["179"],["180"],["179"],["180"],["179"],["180"],["179"],["180"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormdData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["181"],"no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",{"range":"184","text":"185"},[2201,2229],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]"]