[{"/Users/joannechen/Projects/Dev-Connector/client/src/reportWebVitals.js":"1","/Users/joannechen/Projects/Dev-Connector/client/src/App.js":"2","/Users/joannechen/Projects/Dev-Connector/client/src/index.js":"3","/Users/joannechen/Projects/Dev-Connector/client/src/components/layout/Landing.js":"4","/Users/joannechen/Projects/Dev-Connector/client/src/components/layout/Navbar.js":"5","/Users/joannechen/Projects/Dev-Connector/client/src/components/auth/Register.js":"6","/Users/joannechen/Projects/Dev-Connector/client/src/components/auth/Login.js":"7","/Users/joannechen/Projects/Dev-Connector/client/src/store.js":"8","/Users/joannechen/Projects/Dev-Connector/client/src/reducers/index.js":"9","/Users/joannechen/Projects/Dev-Connector/client/src/actions/alert.js":"10","/Users/joannechen/Projects/Dev-Connector/client/src/components/layout/Alert.js":"11","/Users/joannechen/Projects/Dev-Connector/client/src/actions/auth.js":"12","/Users/joannechen/Projects/Dev-Connector/client/src/reducers/alert.js":"13","/Users/joannechen/Projects/Dev-Connector/client/src/reducers/auth.js":"14","/Users/joannechen/Projects/Dev-Connector/client/src/actions/types.js":"15","/Users/joannechen/Projects/Dev-Connector/client/src/utils/setAuthToken.js":"16","/Users/joannechen/Projects/Dev-Connector/client/src/components/dashboard/Dashboard.js":"17","/Users/joannechen/Projects/Dev-Connector/client/src/components/routing/PrivateRoute.js":"18","/Users/joannechen/Projects/Dev-Connector/client/src/reducers/profile.js":"19","/Users/joannechen/Projects/Dev-Connector/client/src/components/layout/Spinner.js":"20","/Users/joannechen/Projects/Dev-Connector/client/src/components/profile-forms/CreateProfile.js":"21","/Users/joannechen/Projects/Dev-Connector/client/src/actions/profile.js":"22","/Users/joannechen/Projects/Dev-Connector/client/src/components/dashboard/DashboardActions.js":"23","/Users/joannechen/Projects/Dev-Connector/client/src/components/profile-forms/EditProfile.js":"24","/Users/joannechen/Projects/Dev-Connector/client/src/components/profile-forms/AddExperience.js":"25","/Users/joannechen/Projects/Dev-Connector/client/src/components/profile-forms/AddEducation.js":"26","/Users/joannechen/Projects/Dev-Connector/client/src/components/dashboard/Experience.js":"27","/Users/joannechen/Projects/Dev-Connector/client/src/components/dashboard/Education.js":"28"},{"size":362,"mtime":1606745319058,"results":"29","hashOfConfig":"30"},{"size":2272,"mtime":1607254965067,"results":"31","hashOfConfig":"30"},{"size":484,"mtime":1606770550461,"results":"32","hashOfConfig":"30"},{"size":1406,"mtime":1607097308058,"results":"33","hashOfConfig":"30"},{"size":1790,"mtime":1607096448148,"results":"34","hashOfConfig":"30"},{"size":6272,"mtime":1607008288621,"results":"35","hashOfConfig":"30"},{"size":2976,"mtime":1607008286187,"results":"36","hashOfConfig":"30"},{"size":501,"mtime":1606907460593,"results":"37","hashOfConfig":"30"},{"size":261,"mtime":1607081370541,"results":"38","hashOfConfig":"30"},{"size":517,"mtime":1606924349719,"results":"39","hashOfConfig":"30"},{"size":865,"mtime":1606924152871,"results":"40","hashOfConfig":"30"},{"size":3581,"mtime":1607101238366,"results":"41","hashOfConfig":"30"},{"size":1083,"mtime":1606992978743,"results":"42","hashOfConfig":"30"},{"size":1955,"mtime":1607271972981,"results":"43","hashOfConfig":"30"},{"size":633,"mtime":1607271671018,"results":"44","hashOfConfig":"30"},{"size":486,"mtime":1606996481588,"results":"45","hashOfConfig":"30"},{"size":2348,"mtime":1607273877453,"results":"46","hashOfConfig":"30"},{"size":1151,"mtime":1607079732933,"results":"47","hashOfConfig":"30"},{"size":1139,"mtime":1607251489699,"results":"48","hashOfConfig":"30"},{"size":322,"mtime":1607099637050,"results":"49","hashOfConfig":"30"},{"size":8680,"mtime":1607203505508,"results":"50","hashOfConfig":"30"},{"size":7233,"mtime":1607272108632,"results":"51","hashOfConfig":"30"},{"size":712,"mtime":1607203355163,"results":"52","hashOfConfig":"30"},{"size":10322,"mtime":1607203472067,"results":"53","hashOfConfig":"30"},{"size":4695,"mtime":1607255371554,"results":"54","hashOfConfig":"30"},{"size":4734,"mtime":1607273110067,"results":"55","hashOfConfig":"30"},{"size":1773,"mtime":1607272494994,"results":"56","hashOfConfig":"30"},{"size":1610,"mtime":1607272899196,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h9m49y",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joannechen/Projects/Dev-Connector/client/src/reportWebVitals.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/App.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/index.js",[],["121","122"],"/Users/joannechen/Projects/Dev-Connector/client/src/components/layout/Landing.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/layout/Navbar.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/auth/Register.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/auth/Login.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/store.js",[],["123","124"],"/Users/joannechen/Projects/Dev-Connector/client/src/reducers/index.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/actions/alert.js",[],["125","126"],"/Users/joannechen/Projects/Dev-Connector/client/src/components/layout/Alert.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/actions/auth.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/reducers/alert.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/reducers/auth.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/actions/types.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/utils/setAuthToken.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/dashboard/Dashboard.js",["127"],"/Users/joannechen/Projects/Dev-Connector/client/src/components/routing/PrivateRoute.js",[],["128","129"],"/Users/joannechen/Projects/Dev-Connector/client/src/reducers/profile.js",["130"],"import { \n    GET_PROFILE, \n    PROFILE_ERROR, \n    CLEAR_PROFILE, \n    UPDATE_PROFILE \n} from \"../actions/types\";\n\n\nconst initialState = {\n    profile: null, //getting all of the individual profile data in here\n    profiles: [], //all the developers for listing\n    repos: [],\n    loading: true,\n    error: {}\n};\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case GET_PROFILE:\n        case UPDATE_PROFILE:\n            return {\n                ...state,  //spreadout the state\n                profile: payload,  //set payload (everything of the profile) into profile\n                loading: false\n            };\n        case PROFILE_ERROR:\n            return {\n                ...state,\n                error: payload, //the err msg and err status\n                loading: false\n            };   \n        case CLEAR_PROFILE: //from auth action\n            return {\n                ...state,\n                profile: null, //clearing\n                repos: [],\n                loading: false\n            };\n\n        default:\n            return state;    \n    }\n}","/Users/joannechen/Projects/Dev-Connector/client/src/components/layout/Spinner.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/profile-forms/CreateProfile.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/actions/profile.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/dashboard/DashboardActions.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/profile-forms/EditProfile.js",["131"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom'; //withRouter is for the redirect of the history\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile'; // need both get and post actions\n\n\nconst EditProfile = ({ \n    profile: { profile, loading }, \n    createProfile, \n    getCurrentProfile, \n    history                //history ('/dashboard) from the createProfile action\n}) => {  \n    const [formData, setFormdData] = useState({\n        company: '',\n        website: '',\n        location: '',\n        status: '',\n        skills: '',\n        githubusername: '',\n        bio: '',\n        twitter: '',\n        facebook: '',\n        linkedin: '',\n        youtube: '',\n        instagram: ''\n    });\n\n    //to onClick to change the state to true, then user can see the input fields for social media\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);  \n\n    useEffect(() => {   //mounting the profile info that are already there\n        getCurrentProfile();   \n\n        // now we set the form in current 'value' b/c not all fields are previously filled\n        setFormdData({\n            company: loading || !profile.company ? '' : profile.company,\n            website: loading || !profile.website ? '' : profile.website,\n            location: loading || !profile.location ? '' : profile.location,\n            status: loading || !profile.status ? '' : profile.status,\n            skills: loading || !profile.skills ? '' : profile.skills.join(','),\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\n            bio: loading || !profile.bio ? '' : profile.bio,\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\n            instagram: loading || !profile.social ? '' : profile.social.instagram,\n\n        })\n\n    }, [loading]); //loading is the condition. only mount this once when it's loading\n\n    const {\n        company,\n        website,\n        location,\n        status,\n        skills,\n        githubusername,\n        bio,\n        twitter,\n        facebook,\n        linkedin,\n        youtube,\n        instagram\n    } = formData\n\n    const onChange = e => setFormdData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        createProfile(formData, history, true); //changing the edit to false so it wont redirect to dashboard\n    }\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Edit Your Profile</h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\"></i> Let's get some information to make your\n                profile stand out\n            </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <select name=\"status\" value={status} onChange={e => onChange(e)}>\n                        <option value=\"0\">* Select Professional Status</option>\n                        <option value=\"Developer\">Developer</option>\n                        <option value=\"Junior Developer\">Junior Developer</option>\n                        <option value=\"Senior Developer\">Senior Developer</option>\n                        <option value=\"Manager\">Manager</option>\n                        <option value=\"Student or Learning\">Student or Learning</option>\n                        <option value=\"Instructor\">Instructor or Teacher</option>\n                        <option value=\"Intern\">Intern</option>\n                        <option value=\"Other\">Other</option>\n                    </select>\n                    <small className=\"form-text\">Give us an idea of where you are at in your career</small>\n                </div>\n                <div className=\"form-group\">\n                    <input \n                        type=\"text\" \n                        placeholder=\"Company\" \n                        name=\"company\"\n                        value={company}\n                        onChange={e => onChange(e)}\n                    />\n                    <small className=\"form-text\">Could be your own company or one you work for</small>\n                </div>\n                <div className=\"form-group\">\n                    <input \n                        type=\"text\" \n                        placeholder=\"Website\" \n                        name=\"website\"\n                        value={website}\n                        onChange={e => onChange(e)}\n                    />\n                    <small className=\"form-text\">Could be your own or a company website</small>\n                </div>\n                <div className=\"form-group\">\n                    <input \n                        type=\"text\" \n                        placeholder=\"Location\" \n                        name=\"location\" \n                        value={location}\n                        onChange={e => onChange(e)}\n                    />\n                    <small className=\"form-text\">City & state suggested (eg. Boston, MA)</small>\n                </div>\n                <div className=\"form-group\">\n                    <input  \n                        type=\"text\" \n                        placeholder=\"* Skills\" \n                        name=\"skills\" \n                        value={skills}\n                        onChange={e => onChange(e)}\n                    />\n                     <small className=\"form-text\">\n                         Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n                    </small>\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Github Username\"\n                        name=\"githubusername\"\n                        value={githubusername}\n                        onChange={e => onChange(e)}\n                    />\n                    <small className=\"form-text\">\n                        If you want your latest repos and a Github link, include yourusername\n                    </small>\n                </div>\n                <div className=\"form-group\">\n                    <textarea \n                        placeholder=\"A short bio of yourself\" \n                        name=\"bio\"\n                        value={bio}\n                        onChange={e => onChange(e)}\n                    >\n                    </textarea>\n                    <small className=\"form-text\">Tell us a little about yourself</small>\n                </div>\n                <div className=\"my-2\">\n                <button onClick={() => toggleSocialInputs(!displaySocialInputs)} \n                    type=\"button\" \n                    className=\"btn btn-light\"\n                >\n                    Add Social Network Links\n                </button>\n                <span>Optional</span>\n                </div>\n\n                {displaySocialInputs && <Fragment>\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-twitter fa-2x\"></i>\n                        <input \n                            type=\"text\" \n                            placeholder=\"Twitter URL\" \n                            name=\"twitter\" \n                            value={twitter}\n                            onChange={e => onChange(e)}\n                        />\n                    </div>\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-facebook fa-2x\"></i>\n                        <input \n                            type=\"text\" \n                            placeholder=\"Facebook URL\" \n                            name=\"facebook\" \n                            value={facebook}\n                            onChange={e => onChange(e)}\n                        />\n                    </div>\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-youtube fa-2x\"></i>\n                        <input \n                            type=\"text\" \n                            placeholder=\"YouTube URL\" \n                            name=\"youtube\" \n                            value={youtube}\n                            onChange={e => onChange(e)}\n                        />\n                    </div>\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-linkedin fa-2x\"></i>\n                        <input \n                            type=\"text\" \n                            placeholder=\"Linkedin URL\" \n                            name=\"linkedin\" \n                            value={linkedin}\n                            onChange={e => onChange(e)}\n                        />\n                    </div>\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-instagram fa-2x\"></i>\n                        <input \n                            type=\"text\" \n                            placeholder=\"Instagram URL\" \n                            name=\"instagram\" \n                            value={instagram}\n                            onChange={e => onChange(e)}\n                        />\n                    </div>                   \n                </Fragment>}               \n                <input \n                    type=\"submit\" \n                    className=\"btn btn-primary my-1\" \n                />\n                <Link className=\"btn btn-light my-1\" to='/dashboard'>Go Back</Link>\n            </form>\n        </Fragment>\n    );\n};\n\nEditProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    getCurrentProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(withRouter(EditProfile));  //using withRouter for history obj which as '/dashboard' from the action","/Users/joannechen/Projects/Dev-Connector/client/src/components/profile-forms/AddExperience.js",["132","133"],"import React, { Fragment, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom'; // we're redirecting from actions file\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addExperience } from '../../actions/profile';\n\nconst AddExperience = ({ addExperience, history }) => {  //passing in the actions and redirect\n    const [formData, setFormData] = useState({\n        company: '',\n        title: '',\n        location: '',\n        from: '',\n        to: '',\n        current: false,\n        description: ''\n    });\n\n    const [toDateDisabled, toggleDisabled] = useState(false); // if current is true, then disable the 'to' field\n\n    const { company, title, location, from, to, current, description } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value});\n\n    return (\n        <Fragment>\n            <h1 class=\"large text-primary\">Add An Experience</h1>\n            <p class=\"lead\">\n                <i class=\"fas fa-code-branch\"></i>\n                 Add any developer/programming positions that you have had in the past\n            </p>\n            <small>* = required field</small>\n            <form \n                class=\"form\" \n                onSubmit={e => {\n                    e.preventDefault();\n                    addExperience(formData, history)\n                }}>\n                <div class=\"form-group\">\n                    <input \n                        type=\"text\" \n                        placeholder=\"* Job Title\" \n                        name=\"title\" \n                        value={title}\n                        onChange={e => onChange(e)}\n                        required \n                    />\n                </div>\n                <div class=\"form-group\">\n                    <input \n                        type=\"text\" \n                        placeholder=\"* Company\" \n                        name=\"company\" \n                        value={company}\n                        onChange={e => onChange(e)}\n                        required \n                    />\n                </div>\n                <div class=\"form-group\">\n                    <input \n                        type=\"text\" \n                        placeholder=\"Location\" \n                        name=\"location\" \n                        value={location}\n                        onChange={e => onChange(e)}\n                    />\n                </div>\n                <div class=\"form-group\">\n                    <h4>From Date</h4>\n                    <input \n                        type=\"date\" \n                        name=\"from\" \n                        value={from}\n                        onChange={e => onChange(e)}\n                    />\n                </div>\n                <div class=\"form-group\">\n                    <p>\n                        <input \n                            type=\"checkbox\" \n                            name=\"current\" \n                            checked={current}  //checked atribute!\n                            value={current} \n                            onChange={e => {   //if the checkbox is ticked:\n                                setFormData({ ...formData, current: !current})   //setting current false => true\n                                toggleDisabled(!toDateDisabled)    //setting toDateDisabled from false => true\n                            }}\n                        />{'  '}\n                        Current Job\n                    </p>\n                </div>\n                <div class=\"form-group\">\n                    <h4>To Date</h4>\n                    <input \n                        type=\"date\" \n                        name=\"to\"\n                        value={to}\n                        onChange={e => onChange(e)}\n                        disabled={toDateDisabled ? 'disabled' : ''}  //if toDateDisabled turn true, then the status is 'disabled'\n                    />\n                </div>\n                <div class=\"form-group\">\n                    <textarea\n                        name=\"description\"\n                        cols=\"30\"\n                        rows=\"5\"\n                        placeholder=\"Job Description\"\n                        value={description}\n                        onChange={e => onChange(e)}\n                    >\n                    </textarea>\n                </div>\n                <input type=\"submit\" class=\"btn btn-primary my-1\" />\n                <a class=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\n            </form>\n        </Fragment>\n    )\n}\n\nAddExperience.propTypes = {\n    addExperience: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addExperience })(AddExperience);\n","/Users/joannechen/Projects/Dev-Connector/client/src/components/profile-forms/AddEducation.js",["134","135"],"/Users/joannechen/Projects/Dev-Connector/client/src/components/dashboard/Experience.js",[],"/Users/joannechen/Projects/Dev-Connector/client/src/components/dashboard/Education.js",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"136","replacedBy":"140"},{"ruleId":"138","replacedBy":"141"},{"ruleId":"136","replacedBy":"142"},{"ruleId":"138","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":20,"column":8,"nodeType":"146","endLine":20,"endColumn":10,"suggestions":"147"},{"ruleId":"136","replacedBy":"148"},{"ruleId":"138","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":17,"column":1,"nodeType":"152","endLine":45,"endColumn":2},{"ruleId":"144","severity":1,"message":"153","line":52,"column":8,"nodeType":"146","endLine":52,"endColumn":17,"suggestions":"154"},{"ruleId":"155","severity":1,"message":"156","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":14},{"ruleId":"155","severity":1,"message":"159","line":2,"column":16,"nodeType":"157","messageId":"158","endLine":2,"endColumn":26},{"ruleId":"155","severity":1,"message":"156","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":14},{"ruleId":"155","severity":1,"message":"159","line":2,"column":16,"nodeType":"157","messageId":"158","endLine":2,"endColumn":26},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],["160"],["161"],["160"],["161"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["162"],["160"],["161"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["163"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"168","text":"169"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"170","text":"171"},[725,727],"[getCurrentProfile]",[2201,2210],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]"]